# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3
          
      - name: NODE INSTALL
        run: npm install node
          
      - name: INSTALL SFDX 
        run: npm install @salesforce/cli --global 
      
      - name: AUTH DEV HUB
        run: |
          echo "${{ secrets.DEVHUB_KEY }}" > devhubkey.key
          CLIENT_ID=${{ secrets.DEVHUB_CLIENTID}}
          sf org login jwt --client-id $CLIENT_ID --jwt-key-file devhubkey.key --username nicholas@arpedio.com --alias devHub --set-default-dev-hub  
      - name: CREATE SCRATCH
        id: create-scratch
        run: |
          output=$(sf org create scratch --definition-file config/project-scratch-def.json --alias TestDeployScratch --duration-days 10 --set-default --json | base64 -w 0)
          echo "::set-output name=result::${output}"

      - name: Save JSON Result
        run: |
          echo "${{ steps.create-scratch.outputs.result }}" > result.json

      - name: Add or update secret
        run: |
            gh secret set SCRATC_ORG_AUTH --body=$(cat "result.json")
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    
      - name: install jq
        run: |
          sudo apt-get install jq
      - name : decode base64 secret
        run: |
          export DECODED_SECRET=$(echo "${{ secrets.SCRATC_ORG_AUTH }}" |  base64 --decode)
          PRIVATE_KEY_PATH=$(echo "$DECODED_SECRET" | jq -r '.result.authFields.privateKey')
          echo "private key path is: $PRIVATE_KEY_PATH"
        shell: bash
      - name: store content of the key path as a secret
        run: |
          echo "$(cat $PRIVATE_KEY_PATH)" 
          SCRATCH_ORG_KEY=$(cat $PRIVATE_KEY_PATH)
          gh secret set SCRATC_ORG_KEY --body=$SCRATCH_ORG_KEY
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}          
      - name: echo key after saving it in secrets
        run: |
          export KEY_SECRET=$(echo "${{ secrets.SCRATC_ORG_KEY }}")
          echo "OUR KEY  is: $KEY_SECRET"
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

    
