name: authorise existing scratch org
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3
      - name: NODE INSTALL
        run: npm install node
      - name: Set up GitHub CLI
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh
      - name: install jq
        run: |
          sudo apt-get install jq
      - name : decode secret
        run: |
          export DECODED_SECRET=$(echo "${{ secrets.SCRATC_ORG_AUTH }}" | base64 --decode)
          echo "decoded secret is: $DECODED_SECRET"
          CONSUMER_KEY=$(echo "$DECODED_SECRET" | jq -r '.result.scratchOrgInfo.ConnectedAppConsumerKey')
          echo "Consumer key is: $CONSUMER_KEY"
          USERNAME=$(echo "$DECODED_SECRET" | jq -r '.result.authFields.username'
          echo "Username is: $USERNAME"
          INSTANCE_URL=$(echo "$DECODED_SECRET" | jq -r '.result.authFields.instanceUrl'
          echo "Instance Url is: $INSTANCE_URL"

        shell: bash
      - name: use key to save path content to secret
        run: |
          gh secret set SCRATC_ORG_KEY --body=$(cat $PRIVATE_KEY_PATH)
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}    
      - name: AUTH SCRATCH ORG
        run: |
          echo "${{ secrets.SCRATC_ORG_KEY }}" > scratchorgkey.key
          sf org login jwt --client-id $CONSUMER_KEY --jwt-key-file scratchorgkey.key --username $USERNAME --instanceurl $INSTANCE_URL --set-default --json
        

        